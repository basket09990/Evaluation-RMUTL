# Generated by Django 5.0.6 on 2024-10-02 11:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='academic_type',
            fields=[
                ('ac_id', models.AutoField(primary_key=True, serialize=False)),
                ('ac_name', models.TextField(choices=[('เจ้าหน้าที่', 'เจ้าหน้าที่'), ('อาจารย์', 'อาจารย์'), ('รองศาสตราจารย์', 'รองศาสตราจารย์'), ('ผู้ช่วยศาสตราจารย์', 'ผู้ช่วยศาสตราจารย์'), ('ศาสตราจารย์', 'ศาสตราจารย์')], verbose_name='ประเภทตำแหน่งวิชาการ')),
            ],
        ),
        migrations.CreateModel(
            name='administrative_competency',
            fields=[
                ('adc_id', models.AutoField(primary_key=True, serialize=False)),
                ('adc_name', models.TextField(blank=True, default='', null=True)),
                ('adc_type', models.TextField(blank=True, default='', null=True)),
                ('adc_num', models.IntegerField(blank=True, default='0', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='evr_round',
            fields=[
                ('evr_id', models.AutoField(primary_key=True, serialize=False)),
                ('evr_year', models.IntegerField(default=2024)),
                ('evr_round', models.IntegerField(blank=True, default='', null=True)),
                ('evr_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='group',
            fields=[
                ('g_id', models.AutoField(primary_key=True, serialize=False)),
                ('g_name', models.TextField(blank=True, default='', null=True)),
                ('g_field_name', models.TextField(blank=True, default='', null=True)),
                ('g_max_workload', models.IntegerField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='main_competency',
            fields=[
                ('mc_id', models.AutoField(primary_key=True, serialize=False)),
                ('mc_name', models.TextField(blank=True, default='', null=True)),
                ('mc_type', models.TextField(blank=True, default='', null=True)),
                ('mc_num', models.IntegerField(blank=True, default='0', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='specific_competency',
            fields=[
                ('sc_id', models.AutoField(primary_key=True, serialize=False)),
                ('sc_name', models.TextField(blank=True, default='', null=True)),
                ('sc_type', models.TextField(blank=True, default='', null=True)),
                ('sc_num', models.IntegerField(blank=True, default='0', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='wl_field',
            fields=[
                ('f_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.TextField(blank=True, default='', null=True, verbose_name='ชื่อน้ำหนักงาน')),
            ],
        ),
        migrations.CreateModel(
            name='group_detail',
            fields=[
                ('gd_id', models.AutoField(primary_key=True, serialize=False)),
                ('gd_workload', models.IntegerField(blank=True, default='', null=True)),
                ('g_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.group')),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_field')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.TextField(blank=True, default='', null=True, verbose_name='ตำแหน่ง')),
                ('administrative_position', models.TextField(blank=True, default='', null=True, verbose_name='ตำแหน่งบริหาร')),
                ('salary', models.TextField(blank=True, default='', null=True, verbose_name='เงินเดือน')),
                ('position_number', models.TextField(blank=True, default='', null=True, verbose_name='เลขที่ประจำตำแหน่ง')),
                ('affiliation', models.TextField(blank=True, default='', null=True, verbose_name='สังกัด')),
                ('old_government', models.TextField(blank=True, default='', null=True, verbose_name='มาช่วยราชการจากที่ใด (ถ้ามี)')),
                ('special_position', models.TextField(blank=True, default='', null=True, verbose_name='หน้าที่พิเศษ')),
                ('start_goverment', models.TextField(blank=True, default='', null=True, verbose_name='เริ่มรับราชการเมื่อวันที่')),
                ('sum_time_goverment', models.IntegerField(blank=True, null=True)),
                ('years_of_service', models.IntegerField(blank=True, null=True)),
                ('months_of_service', models.IntegerField(blank=True, null=True)),
                ('days_of_service', models.IntegerField(blank=True, null=True)),
                ('ac_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.academic_type', verbose_name='ประเภทตำแหน่งวิชาการ')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ผู้ใช้')),
            ],
        ),
        migrations.CreateModel(
            name='user_evaluation',
            fields=[
                ('uevr_id', models.AutoField(primary_key=True, serialize=False)),
                ('administrative_position', models.TextField(blank=True, null=True)),
                ('c_gtt', models.FloatField(blank=True, default='0', null=True)),
                ('c_wl', models.FloatField(blank=True, default='0', null=True)),
                ('c_sumwl', models.FloatField(blank=True, default='0', null=True)),
                ('approve_status', models.BooleanField(default=False)),
                ('evaluater_id', models.IntegerField(blank=True, default='0', null=True)),
                ('evaluater_editgtt', models.FloatField(blank=True, default='0', null=True)),
                ('mc_score', models.FloatField(blank=True, default='0', null=True, verbose_name='ผลสัมฤทธิ์ของงาน')),
                ('sc_score', models.FloatField(blank=True, default='0', null=True, verbose_name='ผลสัมฤทธิ์ของงาน')),
                ('adc_score', models.FloatField(blank=True, default='0', null=True, verbose_name='ผลสัมฤทธิ์ของงาน')),
                ('cp_num', models.FloatField(blank=True, default='0', null=True, verbose_name='จำนวนสมรรถนะ')),
                ('cp_score', models.FloatField(blank=True, default='0', null=True, verbose_name='คะแนน')),
                ('cp_sum', models.FloatField(blank=True, default='0', null=True, verbose_name='ผลรวมคะแนน')),
                ('cp_main_sum', models.FloatField(blank=True, default='0', null=True, verbose_name='คะแนนที่ได้')),
                ('achievement_work', models.FloatField(blank=True, default='0', null=True, verbose_name='ผลสัมฤทธิ์ของงาน')),
                ('performing_work', models.FloatField(blank=True, default='0', null=True, verbose_name='พฤติกรรมการปฏิบัติราชการ (สมรรถนะ)')),
                ('other_work', models.FloatField(blank=True, default='0', null=True, verbose_name='องค์ประกอบอื่น ๆ (ถ้ามี) ')),
                ('sum_work', models.FloatField(blank=True, default='0', null=True, verbose_name='รวม')),
                ('improved', models.TextField(blank=True, default='', null=True, verbose_name='จุดเด่น และ/หรือ สิ่งที่ควรปรับปรุงแก้ไข')),
                ('suggestions', models.TextField(blank=True, default='', null=True, verbose_name='ข้อเสนอแนะเกี่ยวกับวิธีส่งเสริมและพัฒนา')),
                ('remark_achievement', models.TextField(blank=True, default='', null=True, verbose_name='ข้อเสนอแนะเกี่ยวกับวิธีส่งเสริมและพัฒนา')),
                ('remark_mc', models.TextField(blank=True, default='', null=True)),
                ('remark_other', models.TextField(blank=True, default='', null=True)),
                ('remark_total', models.TextField(blank=True, default='', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ac_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_user.academic_type')),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='user_competency_main',
            fields=[
                ('ucm_id', models.AutoField(primary_key=True, serialize=False)),
                ('umc_name', models.TextField(blank=True, default='', null=True)),
                ('umc_type', models.TextField(blank=True, default='', null=True)),
                ('actual_score', models.IntegerField(blank=True, default=0, null=True)),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('mc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.main_competency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='user_competency_councilde',
            fields=[
                ('ucc_id', models.AutoField(primary_key=True, serialize=False)),
                ('ucc_name', models.TextField(blank=True, default='', null=True)),
                ('ucc_type', models.TextField(blank=True, default='', null=True)),
                ('actual_score', models.IntegerField(blank=True, default=0, null=True)),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('sc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.specific_competency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='user_competency_ceo',
            fields=[
                ('uceo_id', models.AutoField(primary_key=True, serialize=False)),
                ('uceo_name', models.TextField(blank=True, default='', null=True)),
                ('uceo_type', models.TextField(blank=True, default='', null=True)),
                ('actual_score', models.IntegerField(blank=True, default=0, null=True)),
                ('adc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.administrative_competency')),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDiagram',
            fields=[
                ('pd_id', models.AutoField(primary_key=True, serialize=False)),
                ('skill_evol', models.TextField(blank=True, default='', null=True)),
                ('dev', models.TextField(blank=True, default='', null=True)),
                ('dev_time', models.IntegerField(blank=True, default=None, null=True)),
                ('uevr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='user_evaluation_agreement',
            fields=[
                ('uevra_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField(default=2024)),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('g_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='user_evident',
            fields=[
                ('uevd_id', models.AutoField(primary_key=True, serialize=False)),
                ('filename', models.TextField(blank=True, default='', null=True)),
                ('picture', models.ImageField(blank=True, default='', null=True, upload_to='uploads/')),
                ('file', models.FileField(blank=True, default='', null=True, upload_to='uploads/')),
                ('uevr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='user_work_info',
            fields=[
                ('uwf_id', models.AutoField(primary_key=True, serialize=False)),
                ('punishment', models.TextField(blank=True, default='', null=True, verbose_name='การกระทำผิดวินัย/การถูกลงโทษ')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='wl_subfield',
            fields=[
                ('sf_id', models.AutoField(primary_key=True, serialize=False)),
                ('sf_name', models.TextField(blank=True, default='', null=True)),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subfields', to='app_user.wl_field')),
            ],
        ),
        migrations.CreateModel(
            name='UserSelectedSubField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_selected', models.DateTimeField(auto_now_add=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_field')),
                ('sf_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_subfield')),
            ],
        ),
        migrations.CreateModel(
            name='SelectedSubfields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_value', models.TextField(blank=True, null=True)),
                ('user_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
                ('sf_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_subfield')),
            ],
        ),
        migrations.CreateModel(
            name='WorkLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('SL', 'ลาป่วย'), ('PL', 'ลากิจ'), ('LT', 'มาสาย'), ('ML', 'ลาคลอดบุตร'), ('OL', 'ลาอุปสมบท'), ('LSL', 'ลาป่วยจำเป็นต้องรักษาตัวเป็นเวลานานคราวเดียวหรือหลายคราวรวมกัน'), ('AW', 'ขาดราชการ')], max_length=3)),
                ('times', models.IntegerField(blank=True, default=0, null=True, verbose_name='จำนวนครั้ง')),
                ('days', models.IntegerField(blank=True, default=0, null=True, verbose_name='จำนวนวัน')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkloadCriteria',
            fields=[
                ('c_id', models.AutoField(primary_key=True, serialize=False)),
                ('c_name', models.TextField(blank=True, default='', null=True)),
                ('c_num', models.FloatField(blank=True, default='0', null=True)),
                ('c_unit', models.FloatField(blank=True, default='0', null=True)),
                ('c_maxnum', models.FloatField(blank=True, default='0', null=True)),
                ('c_workload', models.FloatField(blank=True, default='0', null=True)),
                ('f_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_field')),
                ('sf_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_subfield')),
            ],
        ),
        migrations.CreateModel(
            name='UserWorkloadSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_unit', models.FloatField()),
                ('calculated_workload', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sf_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_subfield')),
                ('c_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app_user.workloadcriteria')),
            ],
        ),
        migrations.CreateModel(
            name='user_evaluation_score',
            fields=[
                ('ues_id', models.AutoField(primary_key=True, serialize=False)),
                ('ues_name', models.TextField(blank=True, default='', null=True)),
                ('ues_name_detail', models.TextField(blank=True, default='', null=True)),
                ('ues_num', models.FloatField(blank=True, default='', null=True)),
                ('ues_unit', models.FloatField(blank=True, default='', null=True)),
                ('ues_score', models.FloatField(blank=True, default='', null=True)),
                ('ues_maxnum', models.FloatField(blank=True, default='', null=True)),
                ('ues_workload', models.FloatField(blank=True, default='', null=True)),
                ('g_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_user.group')),
                ('gd_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_user.group_detail')),
                ('uevr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
                ('f_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_field')),
                ('sf_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_subfield')),
                ('c_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_user.workloadcriteria')),
            ],
        ),
        migrations.CreateModel(
            name='SelectedWorkload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.user_evaluation')),
                ('sf_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.wl_subfield')),
                ('c_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.workloadcriteria')),
            ],
        ),
        migrations.CreateModel(
            name='UserAdministrativeCompetencyScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_score', models.FloatField(default=0)),
                ('actual_score', models.FloatField(default=0)),
                ('adc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.administrative_competency')),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'adc_id', 'evr_id')},
            },
        ),
        migrations.CreateModel(
            name='UserMainCompetencyScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_score', models.FloatField(default=0)),
                ('actual_score', models.FloatField(default=0)),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('mc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.main_competency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'mc_id', 'evr_id')},
            },
        ),
        migrations.CreateModel(
            name='UserSpecificCompetencyScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_score', models.FloatField(default=0)),
                ('actual_score', models.FloatField(default=0)),
                ('evr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.evr_round')),
                ('sc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_user.specific_competency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'sc_id', 'evr_id')},
            },
        ),
    ]
